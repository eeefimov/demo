{
  "uid" : "5f81959d7e136225",
  "name" : "test_authorization_validation[Invalid token]",
  "fullName" : "tests_api.test_post_orders.TestUserOrder#test_authorization_validation",
  "historyId" : "ef08a1cf47524b4c6a9f81bee27ecb22",
  "time" : {
    "start" : 1718458662218,
    "stop" : 1718458662445,
    "duration" : 227
  },
  "description" : "Verify response code with invalid token.",
  "descriptionHtml" : "<p>Verify response code with invalid token.</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 200 == 401\n +  where 200 = <Response [200]>.status_code",
  "statusTrace" : "self = <tests.tests_api.test_post_orders.TestUserOrder object at 0x7fb5bf2c3490>\nuser_order = <tests.conftest.user_order.<locals>.USERORDERS object at 0x7fb5c0dec190>\ntoken = '0f3c4a9c29091e7885edf887ff38edde97a044eb', exp = 401\n\n    @pytest.mark.parametrize('token, exp', invalid_token)\n    def test_authorization_validation(self, user_order, token, exp):\n        \"\"\"Verify response code with invalid token.\"\"\"\n        user_order.header = user_order.header_auth(token)\n        order = user_order.setup_order(buns=True,\n                                       ingr_number=2)\n        response = user_order.send_requests('post',\n                                            user_order.endpoint,\n                                            user_order.header,\n                                            order)\n>       assert response.status_code == exp\nE       assert 200 == 401\nE        +  where 200 = <Response [200]>.status_code\n\ntests/tests_api/test_post_orders.py:170: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1718458550623,
      "stop" : 1718458550623,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1718458550624,
      "stop" : 1718458550646,
      "duration" : 22
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "user_order",
    "time" : {
      "start" : 1718458661932,
      "stop" : 1718458662217,
      "duration" : 285
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Setup Make Order",
      "time" : {
        "start" : 1718458661932,
        "stop" : 1718458662934,
        "duration" : 1002
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Set user registration data_models",
        "time" : {
          "start" : 1718458661933,
          "stop" : 1718458661933,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "name",
          "value" : "'Mouthdanny75'"
        }, {
          "name" : "mail",
          "value" : "'Emily.Whitaker@rodriguez.biz'"
        }, {
          "name" : "pwd",
          "value" : "'3F#6rH'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Send POST register request",
        "time" : {
          "start" : 1718458661933,
          "stop" : 1718458662217,
          "duration" : 284
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "1edd2fbb86811f46",
          "name" : "Request Info",
          "source" : "1edd2fbb86811f46.txt",
          "type" : "text/plain",
          "size" : 201
        }, {
          "uid" : "d5e249562307e701",
          "name" : "api Response",
          "source" : "d5e249562307e701.json",
          "type" : "application/json",
          "size" : 429
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 2,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Setup Header with user token",
        "time" : {
          "start" : 1718458662217,
          "stop" : 1718458662217,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "token",
          "value" : "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NmQ5OTI2OWVkMjgwMDAxYjQzZGMzOCIsImlhdCI6MTcxODQ1ODY2MiwiZXhwIjoxNzE4NDU5ODYyfQ.z6-Kyrk8ml4IqHComl3iHTNcthBLD-N5th_cgbieeOE'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Load data_models from json file",
        "time" : {
          "start" : 1718458662217,
          "stop" : 1718458662217,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "d31f2dd6b2f21604",
          "name" : "api Response",
          "source" : "d31f2dd6b2f21604.json",
          "type" : "application/json",
          "size" : 7597
        } ],
        "parameters" : [ {
          "name" : "filename",
          "value" : "'ingredients.json'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 4,
      "attachmentsCount" : 3,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1718458550623,
      "stop" : 1718458550623,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1718458550623,
      "stop" : 1718458550623,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "delete_output_dir",
    "time" : {
      "start" : 1718458550623,
      "stop" : 1718458550623,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify response code with invalid token.",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 200 == 401\n +  where 200 = <Response [200]>.status_code",
    "statusTrace" : "self = <tests.tests_api.test_post_orders.TestUserOrder object at 0x7fb5bf2c3490>\nuser_order = <tests.conftest.user_order.<locals>.USERORDERS object at 0x7fb5c0dec190>\ntoken = '0f3c4a9c29091e7885edf887ff38edde97a044eb', exp = 401\n\n    @pytest.mark.parametrize('token, exp', invalid_token)\n    def test_authorization_validation(self, user_order, token, exp):\n        \"\"\"Verify response code with invalid token.\"\"\"\n        user_order.header = user_order.header_auth(token)\n        order = user_order.setup_order(buns=True,\n                                       ingr_number=2)\n        response = user_order.send_requests('post',\n                                            user_order.endpoint,\n                                            user_order.header,\n                                            order)\n>       assert response.status_code == exp\nE       assert 200 == 401\nE        +  where 200 = <Response [200]>.status_code\n\ntests/tests_api/test_post_orders.py:170: AssertionError",
    "steps" : [ {
      "name" : "Setup Header with user token",
      "time" : {
        "start" : 1718458662218,
        "stop" : 1718458662218,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "token",
        "value" : "'0f3c4a9c29091e7885edf887ff38edde97a044eb'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Setup User order",
      "time" : {
        "start" : 1718458662218,
        "stop" : 1718458662219,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Load data_models from json file",
        "time" : {
          "start" : 1718458662218,
          "stop" : 1718458662219,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "2e5657d0eed3b229",
          "name" : "api Response",
          "source" : "2e5657d0eed3b229.json",
          "type" : "application/json",
          "size" : 7597
        } ],
        "parameters" : [ {
          "name" : "filename",
          "value" : "'ingredients.json'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Set buns in order",
        "time" : {
          "start" : 1718458662219,
          "stop" : 1718458662219,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Set ingredients in order",
        "time" : {
          "start" : 1718458662219,
          "stop" : 1718458662219,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ {
        "uid" : "2d442c479e3428ad",
        "name" : "api Response",
        "source" : "2d442c479e3428ad.json",
        "type" : "application/json",
        "size" : 101
      } ],
      "parameters" : [ {
        "name" : "empty",
        "value" : "False"
      }, {
        "name" : "buns",
        "value" : "True"
      }, {
        "name" : "buns_number",
        "value" : "1"
      }, {
        "name" : "ingr_number",
        "value" : "2"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Send post requests",
      "time" : {
        "start" : 1718458662219,
        "stop" : 1718458662445,
        "duration" : 226
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "484d039c35bca5bd",
        "name" : "Request Info",
        "source" : "484d039c35bca5bd.txt",
        "type" : "text/plain",
        "size" : 265
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "user_order::0",
    "time" : {
      "start" : 1718458662449,
      "stop" : 1718458662935,
      "duration" : 486
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Send DELETE request",
      "time" : {
        "start" : 1718458662449,
        "stop" : 1718458662933,
        "duration" : 484
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Setup Header with user token",
        "time" : {
          "start" : 1718458662449,
          "stop" : 1718458662449,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "token",
          "value" : "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NmQ5OTI2OWVkMjgwMDAxYjQzZGMzOCIsImlhdCI6MTcxODQ1ODY2MiwiZXhwIjoxNzE4NDU5ODYyfQ.z6-Kyrk8ml4IqHComl3iHTNcthBLD-N5th_cgbieeOE'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ {
        "uid" : "2b272f4c335c4ec6",
        "name" : "Request Info",
        "source" : "2b272f4c335c4ec6.txt",
        "type" : "text/plain",
        "size" : 311
      } ],
      "parameters" : [ {
        "name" : "access_token",
        "value" : "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NmQ5OTI2OWVkMjgwMDAxYjQzZGMzOCIsImlhdCI6MTcxODQ1ODY2MiwiZXhwIjoxNzE4NDU5ODYyfQ.z6-Kyrk8ml4IqHComl3iHTNcthBLD-N5th_cgbieeOE'"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "suite",
    "value" : "test_post_orders"
  }, {
    "name" : "subSuite",
    "value" : "TestUserOrder"
  }, {
    "name" : "host",
    "value" : "8c6f236140c2"
  }, {
    "name" : "thread",
    "value" : "8-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_post_orders"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "exp",
    "value" : "401"
  }, {
    "name" : "token",
    "value" : "'0f3c4a9c29091e7885edf887ff38edde97a044eb'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5f81959d7e136225.json",
  "parameterValues" : [ "401", "'0f3c4a9c29091e7885edf887ff38edde97a044eb'" ]
}