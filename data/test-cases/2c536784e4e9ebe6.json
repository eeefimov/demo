{
  "uid" : "2c536784e4e9ebe6",
  "name" : "test_update_credentials_validation[PATCH email]",
  "fullName" : "tests_api.test_patch_user.TestPatchUser#test_update_credentials_validation",
  "historyId" : "abc4e79f30ff3300be3d016180f1ae87",
  "time" : {
    "start" : 1718453521178,
    "stop" : 1718453521345,
    "duration" : 167
  },
  "description" : "Verify updates of user credentials.",
  "descriptionHtml" : "<p>Verify updates of user credentials.</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert {'email': 'Julie.Yoder@miles.com', 'name': 'Watchbrianbrown', 'password': 'T+4$wP'} != {'email': 'Julie.Yoder@miles.com', 'name': 'Watchbrianbrown', 'password': 'T+4$wP'}\n +  where {'email': 'Julie.Yoder@miles.com', 'name': 'Watchbrianbrown', 'password': 'T+4$wP'} = <api.user.USER object at 0x7fa11528f810>.data",
  "statusTrace" : "self = <tests.tests_api.test_patch_user.TestPatchUser object at 0x7fa1165f0790>\nusr = <api.user.USER object at 0x7fa11528f810>, value = 'email', exp = 200\n\n    @pytest.mark.parametrize('value, exp', patch_valid)\n    def test_update_credentials_validation(self, usr, value, exp):\n        \"\"\"Verify updates of user credentials.\"\"\"\n        old_data = usr.data\n        response = usr.patch_user(usr.new_user_data(value))\n        assert response.status_code == exp\n>       assert old_data != usr.data\nE       AssertionError: assert {'email': 'Julie.Yoder@miles.com', 'name': 'Watchbrianbrown', 'password': 'T+4$wP'} != {'email': 'Julie.Yoder@miles.com', 'name': 'Watchbrianbrown', 'password': 'T+4$wP'}\nE        +  where {'email': 'Julie.Yoder@miles.com', 'name': 'Watchbrianbrown', 'password': 'T+4$wP'} = <api.user.USER object at 0x7fa11528f810>.data\n\ntests/tests_api/test_patch_user.py:64: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1718453496061,
      "stop" : 1718453496083,
      "duration" : 22
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1718453496061,
      "stop" : 1718453496061,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1718453496060,
      "stop" : 1718453496060,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1718453496061,
      "stop" : 1718453496061,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "delete_output_dir",
    "time" : {
      "start" : 1718453496061,
      "stop" : 1718453496061,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "register",
    "time" : {
      "start" : 1718453520957,
      "stop" : 1718453520958,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Setup Register data",
      "time" : {
        "start" : 1718453520957,
        "stop" : 1718453520958,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Set user registration data_models",
        "time" : {
          "start" : 1718453520958,
          "stop" : 1718453520958,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "name",
          "value" : "'Watchbrianbrown'"
        }, {
          "name" : "mail",
          "value" : "'Julie.Yoder@miles.com'"
        }, {
          "name" : "pwd",
          "value" : "'T+4$wP'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "usr",
    "time" : {
      "start" : 1718453520958,
      "stop" : 1718453521178,
      "duration" : 220
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Setup User data",
      "time" : {
        "start" : 1718453520958,
        "stop" : 1718453520958,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Send POST register request",
      "time" : {
        "start" : 1718453520958,
        "stop" : 1718453521178,
        "duration" : 220
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "1b67dad2bf18ee6b",
        "name" : "Request Info",
        "source" : "1b67dad2bf18ee6b.txt",
        "type" : "text/plain",
        "size" : 197
      }, {
        "uid" : "99901117e845d5ff",
        "name" : "api Response",
        "source" : "99901117e845d5ff.json",
        "type" : "application/json",
        "size" : 425
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Setup Header with user token",
      "time" : {
        "start" : 1718453521178,
        "stop" : 1718453521178,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "token",
        "value" : "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NmQ4NTExOWVkMjgwMDAxYjQzZDhlYyIsImlhdCI6MTcxODQ1MzUyMSwiZXhwIjoxNzE4NDU0NzIxfQ.G9gjomn8h3iApL2QNoMzvQa5Ol_pWk4ESSxBbcjy71E'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "Verify updates of user credentials.",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert {'email': 'Julie.Yoder@miles.com', 'name': 'Watchbrianbrown', 'password': 'T+4$wP'} != {'email': 'Julie.Yoder@miles.com', 'name': 'Watchbrianbrown', 'password': 'T+4$wP'}\n +  where {'email': 'Julie.Yoder@miles.com', 'name': 'Watchbrianbrown', 'password': 'T+4$wP'} = <api.user.USER object at 0x7fa11528f810>.data",
    "statusTrace" : "self = <tests.tests_api.test_patch_user.TestPatchUser object at 0x7fa1165f0790>\nusr = <api.user.USER object at 0x7fa11528f810>, value = 'email', exp = 200\n\n    @pytest.mark.parametrize('value, exp', patch_valid)\n    def test_update_credentials_validation(self, usr, value, exp):\n        \"\"\"Verify updates of user credentials.\"\"\"\n        old_data = usr.data\n        response = usr.patch_user(usr.new_user_data(value))\n        assert response.status_code == exp\n>       assert old_data != usr.data\nE       AssertionError: assert {'email': 'Julie.Yoder@miles.com', 'name': 'Watchbrianbrown', 'password': 'T+4$wP'} != {'email': 'Julie.Yoder@miles.com', 'name': 'Watchbrianbrown', 'password': 'T+4$wP'}\nE        +  where {'email': 'Julie.Yoder@miles.com', 'name': 'Watchbrianbrown', 'password': 'T+4$wP'} = <api.user.USER object at 0x7fa11528f810>.data\n\ntests/tests_api/test_patch_user.py:64: AssertionError",
    "steps" : [ {
      "name" : "Setup new user data",
      "time" : {
        "start" : 1718453521179,
        "stop" : 1718453521179,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "value",
        "value" : "'email'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Send PATCH user request",
      "time" : {
        "start" : 1718453521179,
        "stop" : 1718453521345,
        "duration" : 166
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "ca0c5010648a74f1",
        "name" : "Request Info",
        "source" : "ca0c5010648a74f1.txt",
        "type" : "text/plain",
        "size" : 389
      }, {
        "uid" : "a0ec4e0853b2428e",
        "name" : "api Response",
        "source" : "a0ec4e0853b2428e.json",
        "type" : "application/json",
        "size" : 124
      } ],
      "parameters" : [ {
        "name" : "new_data",
        "value" : "{'email': 'newkristine76@example.org'}"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "register::0",
    "time" : {
      "start" : 1718453521386,
      "stop" : 1718453521563,
      "duration" : 177
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Send DELETE request",
      "time" : {
        "start" : 1718453521386,
        "stop" : 1718453521562,
        "duration" : 176
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Setup Header with user token",
        "time" : {
          "start" : 1718453521387,
          "stop" : 1718453521387,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "token",
          "value" : "None"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ {
        "uid" : "886740b9fa3ec6d8",
        "name" : "Request Info",
        "source" : "886740b9fa3ec6d8.txt",
        "type" : "text/plain",
        "size" : 137
      } ],
      "parameters" : [ {
        "name" : "access_token",
        "value" : "None"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "usr::0",
    "time" : {
      "start" : 1718453521385,
      "stop" : 1718453521386,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "suite",
    "value" : "test_patch_user"
  }, {
    "name" : "subSuite",
    "value" : "TestPatchUser"
  }, {
    "name" : "host",
    "value" : "d36a71c73347"
  }, {
    "name" : "thread",
    "value" : "8-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_patch_user"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "exp",
    "value" : "200"
  }, {
    "name" : "value",
    "value" : "'email'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "2c536784e4e9ebe6.json",
  "parameterValues" : [ "200", "'email'" ]
}