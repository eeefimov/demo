{
  "uid" : "736f2561f05134f6",
  "name" : "test_reset_code[Not registered email]",
  "fullName" : "tests_api.test_post_reset_password.TestReset#test_reset_code",
  "historyId" : "3c9c93fde404ac70c381081cf7fe6d61",
  "time" : {
    "start" : 1718453615115,
    "stop" : 1718453616838,
    "duration" : 1723
  },
  "description" : "Verify reset code in email box.",
  "descriptionHtml" : "<p>Verify reset code in email box.</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = <function RESET.verify_confirmation_code at 0x7fa1165698a0>('reenancetester@gmail')\n +    where <function RESET.verify_confirmation_code at 0x7fa1165698a0> = RESET.verify_confirmation_code",
  "statusTrace" : "self = <tests.tests_api.test_post_reset_password.TestReset object at 0x7fa115329290>\nreset = <api.user.USER object at 0x7fa116f30250>\nmail = 'freenancetester@gmail.com', pwd = 'uxidgrqiouboppzc'\n\n    @pytest.mark.parametrize('mail, pwd', email_send_code)\n    def test_reset_code(self, reset, mail, pwd):\n        \"\"\"Verify reset code in email box.\"\"\"\n        reset.data = {\"email\": f\"{mail}\"}\n        response = reset.send_requests('post', reset.endpoint,\n                                       None, reset.data)\n        _, code = UTILS.mail_check(mail, pwd)\n        assert code\n>       assert RESET.verify_confirmation_code(code)\nE       AssertionError: assert False\nE        +  where False = <function RESET.verify_confirmation_code at 0x7fa1165698a0>('reenancetester@gmail')\nE        +    where <function RESET.verify_confirmation_code at 0x7fa1165698a0> = RESET.verify_confirmation_code\n\ntests/tests_api/test_post_reset_password.py:60: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1718453496061,
      "stop" : 1718453496083,
      "duration" : 22
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "reset",
    "time" : {
      "start" : 1718453614879,
      "stop" : 1718453615114,
      "duration" : 235
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Setup reset request",
      "time" : {
        "start" : 1718453614879,
        "stop" : 1718453615114,
        "duration" : 235
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Send POST register request",
        "time" : {
          "start" : 1718453614880,
          "stop" : 1718453615113,
          "duration" : 233
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "309bf94e4898ec51",
          "name" : "Request Info",
          "source" : "309bf94e4898ec51.txt",
          "type" : "text/plain",
          "size" : 198
        }, {
          "uid" : "fbf6a5ae9edf1e97",
          "name" : "api Response",
          "source" : "fbf6a5ae9edf1e97.json",
          "type" : "application/json",
          "size" : 426
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 2,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "reset",
        "value" : "<api.user.USER object at 0x7fa116f30250>"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1718453496061,
      "stop" : 1718453496061,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1718453496060,
      "stop" : 1718453496060,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "register",
    "time" : {
      "start" : 1718453614878,
      "stop" : 1718453614879,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Setup Register data",
      "time" : {
        "start" : 1718453614878,
        "stop" : 1718453614879,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Set user registration data_models",
        "time" : {
          "start" : 1718453614879,
          "stop" : 1718453614879,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "name",
          "value" : "'Profejeremy48'"
        }, {
          "name" : "mail",
          "value" : "'Jessica.Ochoa@guzman.com'"
        }, {
          "name" : "pwd",
          "value" : "'6DRg0r'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1718453496061,
      "stop" : 1718453496061,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "delete_output_dir",
    "time" : {
      "start" : 1718453496061,
      "stop" : 1718453496061,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify reset code in email box.",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = <function RESET.verify_confirmation_code at 0x7fa1165698a0>('reenancetester@gmail')\n +    where <function RESET.verify_confirmation_code at 0x7fa1165698a0> = RESET.verify_confirmation_code",
    "statusTrace" : "self = <tests.tests_api.test_post_reset_password.TestReset object at 0x7fa115329290>\nreset = <api.user.USER object at 0x7fa116f30250>\nmail = 'freenancetester@gmail.com', pwd = 'uxidgrqiouboppzc'\n\n    @pytest.mark.parametrize('mail, pwd', email_send_code)\n    def test_reset_code(self, reset, mail, pwd):\n        \"\"\"Verify reset code in email box.\"\"\"\n        reset.data = {\"email\": f\"{mail}\"}\n        response = reset.send_requests('post', reset.endpoint,\n                                       None, reset.data)\n        _, code = UTILS.mail_check(mail, pwd)\n        assert code\n>       assert RESET.verify_confirmation_code(code)\nE       AssertionError: assert False\nE        +  where False = <function RESET.verify_confirmation_code at 0x7fa1165698a0>('reenancetester@gmail')\nE        +    where <function RESET.verify_confirmation_code at 0x7fa1165698a0> = RESET.verify_confirmation_code\n\ntests/tests_api/test_post_reset_password.py:60: AssertionError",
    "steps" : [ {
      "name" : "Send post requests",
      "time" : {
        "start" : 1718453615115,
        "stop" : 1718453615276,
        "duration" : 161
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "c7cea6cbe2d556b",
        "name" : "Request Info",
        "source" : "c7cea6cbe2d556b.txt",
        "type" : "text/plain",
        "size" : 153
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "register::0",
    "time" : {
      "start" : 1718453616847,
      "stop" : 1718453617262,
      "duration" : 415
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Send DELETE request",
      "time" : {
        "start" : 1718453616847,
        "stop" : 1718453617261,
        "duration" : 414
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Setup Header with user token",
        "time" : {
          "start" : 1718453616847,
          "stop" : 1718453616847,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "token",
          "value" : "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NmQ4NTZmOWVkMjgwMDAxYjQzZDk5OCIsImlhdCI6MTcxODQ1MzYxNSwiZXhwIjoxNzE4NDU0ODE1fQ.T93Tmt5TpRboofyLnZo8ScTSr0e0oorJFn3u36zE7Gk'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ {
        "uid" : "f7454e058f187054",
        "name" : "Request Info",
        "source" : "f7454e058f187054.txt",
        "type" : "text/plain",
        "size" : 311
      } ],
      "parameters" : [ {
        "name" : "access_token",
        "value" : "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NmQ4NTZmOWVkMjgwMDAxYjQzZDk5OCIsImlhdCI6MTcxODQ1MzYxNSwiZXhwIjoxNzE4NDU0ODE1fQ.T93Tmt5TpRboofyLnZo8ScTSr0e0oorJFn3u36zE7Gk'"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "suite",
    "value" : "test_post_reset_password"
  }, {
    "name" : "subSuite",
    "value" : "TestReset"
  }, {
    "name" : "host",
    "value" : "d36a71c73347"
  }, {
    "name" : "thread",
    "value" : "8-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_post_reset_password"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "mail",
    "value" : "'freenancetester@gmail.com'"
  }, {
    "name" : "pwd",
    "value" : "'uxidgrqiouboppzc'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "736f2561f05134f6.json",
  "parameterValues" : [ "'freenancetester@gmail.com'", "'uxidgrqiouboppzc'" ]
}