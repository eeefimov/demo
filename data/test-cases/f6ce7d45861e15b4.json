{
  "uid" : "f6ce7d45861e15b4",
  "name" : "test_update_credentials_validation[PATCH name]",
  "fullName" : "tests_api.test_patch_user.TestPatchUser#test_update_credentials_validation",
  "historyId" : "9dc851f36dadad7295689466ab3670f0",
  "time" : {
    "start" : 1718453521797,
    "stop" : 1718453521967,
    "duration" : 170
  },
  "description" : "Verify updates of user credentials.",
  "descriptionHtml" : "<p>Verify updates of user credentials.</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert {'email': 'Melanie.Bauer@perez.com', 'name': 'Courtmelindachapman', 'password': 'zd+Vh5'} != {'email': 'Melanie.Bauer@perez.com', 'name': 'Courtmelindachapman', 'password': 'zd+Vh5'}\n +  where {'email': 'Melanie.Bauer@perez.com', 'name': 'Courtmelindachapman', 'password': 'zd+Vh5'} = <api.user.USER object at 0x7fa116fb0450>.data",
  "statusTrace" : "self = <tests.tests_api.test_patch_user.TestPatchUser object at 0x7fa1165f0b90>\nusr = <api.user.USER object at 0x7fa116fb0450>, value = 'name', exp = 200\n\n    @pytest.mark.parametrize('value, exp', patch_valid)\n    def test_update_credentials_validation(self, usr, value, exp):\n        \"\"\"Verify updates of user credentials.\"\"\"\n        old_data = usr.data\n        response = usr.patch_user(usr.new_user_data(value))\n        assert response.status_code == exp\n>       assert old_data != usr.data\nE       AssertionError: assert {'email': 'Melanie.Bauer@perez.com', 'name': 'Courtmelindachapman', 'password': 'zd+Vh5'} != {'email': 'Melanie.Bauer@perez.com', 'name': 'Courtmelindachapman', 'password': 'zd+Vh5'}\nE        +  where {'email': 'Melanie.Bauer@perez.com', 'name': 'Courtmelindachapman', 'password': 'zd+Vh5'} = <api.user.USER object at 0x7fa116fb0450>.data\n\ntests/tests_api/test_patch_user.py:64: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1718453496061,
      "stop" : 1718453496083,
      "duration" : 22
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1718453496061,
      "stop" : 1718453496061,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "register",
    "time" : {
      "start" : 1718453521565,
      "stop" : 1718453521566,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Setup Register data",
      "time" : {
        "start" : 1718453521565,
        "stop" : 1718453521566,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Set user registration data_models",
        "time" : {
          "start" : 1718453521566,
          "stop" : 1718453521566,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "name",
          "value" : "'Courtmelindachapman'"
        }, {
          "name" : "mail",
          "value" : "'Melanie.Bauer@perez.com'"
        }, {
          "name" : "pwd",
          "value" : "'zd+Vh5'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1718453496060,
      "stop" : 1718453496060,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "usr",
    "time" : {
      "start" : 1718453521566,
      "stop" : 1718453521797,
      "duration" : 231
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Setup User data",
      "time" : {
        "start" : 1718453521566,
        "stop" : 1718453521566,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Send POST register request",
      "time" : {
        "start" : 1718453521566,
        "stop" : 1718453521797,
        "duration" : 231
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "5aae8fafaf1c9c57",
        "name" : "Request Info",
        "source" : "5aae8fafaf1c9c57.txt",
        "type" : "text/plain",
        "size" : 203
      }, {
        "uid" : "4316f4f61392abcb",
        "name" : "api Response",
        "source" : "4316f4f61392abcb.json",
        "type" : "application/json",
        "size" : 431
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Setup Header with user token",
      "time" : {
        "start" : 1718453521797,
        "stop" : 1718453521797,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "token",
        "value" : "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NmQ4NTExOWVkMjgwMDAxYjQzZDhlZSIsImlhdCI6MTcxODQ1MzUyMSwiZXhwIjoxNzE4NDU0NzIxfQ.yrkZKoWhesT9Z4bdrs0rxHpjFtnGCQ_dzD5Y6A6M4cM'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1718453496061,
      "stop" : 1718453496061,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "delete_output_dir",
    "time" : {
      "start" : 1718453496061,
      "stop" : 1718453496061,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify updates of user credentials.",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert {'email': 'Melanie.Bauer@perez.com', 'name': 'Courtmelindachapman', 'password': 'zd+Vh5'} != {'email': 'Melanie.Bauer@perez.com', 'name': 'Courtmelindachapman', 'password': 'zd+Vh5'}\n +  where {'email': 'Melanie.Bauer@perez.com', 'name': 'Courtmelindachapman', 'password': 'zd+Vh5'} = <api.user.USER object at 0x7fa116fb0450>.data",
    "statusTrace" : "self = <tests.tests_api.test_patch_user.TestPatchUser object at 0x7fa1165f0b90>\nusr = <api.user.USER object at 0x7fa116fb0450>, value = 'name', exp = 200\n\n    @pytest.mark.parametrize('value, exp', patch_valid)\n    def test_update_credentials_validation(self, usr, value, exp):\n        \"\"\"Verify updates of user credentials.\"\"\"\n        old_data = usr.data\n        response = usr.patch_user(usr.new_user_data(value))\n        assert response.status_code == exp\n>       assert old_data != usr.data\nE       AssertionError: assert {'email': 'Melanie.Bauer@perez.com', 'name': 'Courtmelindachapman', 'password': 'zd+Vh5'} != {'email': 'Melanie.Bauer@perez.com', 'name': 'Courtmelindachapman', 'password': 'zd+Vh5'}\nE        +  where {'email': 'Melanie.Bauer@perez.com', 'name': 'Courtmelindachapman', 'password': 'zd+Vh5'} = <api.user.USER object at 0x7fa116fb0450>.data\n\ntests/tests_api/test_patch_user.py:64: AssertionError",
    "steps" : [ {
      "name" : "Setup new user data",
      "time" : {
        "start" : 1718453521797,
        "stop" : 1718453521798,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "value",
        "value" : "'name'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Send PATCH user request",
      "time" : {
        "start" : 1718453521798,
        "stop" : 1718453521967,
        "duration" : 169
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "14aab7ce0c7ecf",
        "name" : "Request Info",
        "source" : "14aab7ce0c7ecf.txt",
        "type" : "text/plain",
        "size" : 395
      }, {
        "uid" : "30bc81f2b73a02fe",
        "name" : "api Response",
        "source" : "30bc81f2b73a02fe.json",
        "type" : "application/json",
        "size" : 115
      } ],
      "parameters" : [ {
        "name" : "new_data",
        "value" : "{'name': 'newlee33'}"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "register::0",
    "time" : {
      "start" : 1718453521971,
      "stop" : 1718453522128,
      "duration" : 157
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Send DELETE request",
      "time" : {
        "start" : 1718453521971,
        "stop" : 1718453522127,
        "duration" : 156
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Setup Header with user token",
        "time" : {
          "start" : 1718453521971,
          "stop" : 1718453521971,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "token",
          "value" : "None"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ {
        "uid" : "ab286753d34335c6",
        "name" : "Request Info",
        "source" : "ab286753d34335c6.txt",
        "type" : "text/plain",
        "size" : 137
      } ],
      "parameters" : [ {
        "name" : "access_token",
        "value" : "None"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "usr::0",
    "time" : {
      "start" : 1718453521970,
      "stop" : 1718453521971,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "suite",
    "value" : "test_patch_user"
  }, {
    "name" : "subSuite",
    "value" : "TestPatchUser"
  }, {
    "name" : "host",
    "value" : "d36a71c73347"
  }, {
    "name" : "thread",
    "value" : "8-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_patch_user"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "exp",
    "value" : "200"
  }, {
    "name" : "value",
    "value" : "'name'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f6ce7d45861e15b4.json",
  "parameterValues" : [ "200", "'name'" ]
}