{
  "uid" : "9d9290f5a76f6c6f",
  "name" : "test_name_validation[User name with front space string]",
  "fullName" : "tests_api.test_post_register.TestRegister#test_name_validation",
  "historyId" : "134fa62483ade387af61ecf3c880b244",
  "time" : {
    "start" : 1718795446225,
    "stop" : 1718795446448,
    "duration" : 223
  },
  "description" : "Verify response code with different name.",
  "descriptionHtml" : "<p>Verify response code with different name.</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 200 == 400\n +  where 200 = <Response [200]>.status_code",
  "statusTrace" : "self = <tests.tests_api.test_post_register.TestRegister object at 0x7ff7af776510>\nregister = <api.user.USER object at 0x7ff7af552e50>, name = ' section'\nmail = 'robert04@example.com', pwd = 'O#f$#Y', exp = 400\n\n    @pytest.mark.parametrize(\"name, mail, pwd, exp\", name_validation)\n    def test_name_validation(self, register, name, mail, pwd, exp):\n        \"\"\"Verify response code with different name.\"\"\"\n        register.data = register.setup_register_data(name, mail, pwd)\n        response = register.post_register()\n>       assert response.status_code == exp\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntests/tests_api/test_post_register.py:154: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1718795335202,
      "stop" : 1718795335224,
      "duration" : 22
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1718795335201,
      "stop" : 1718795335202,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1718795335224,
      "stop" : 1718795335224,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "register",
    "time" : {
      "start" : 1718795446224,
      "stop" : 1718795446225,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Setup Register data",
      "time" : {
        "start" : 1718795446224,
        "stop" : 1718795446225,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Set user registration data_models",
        "time" : {
          "start" : 1718795446225,
          "stop" : 1718795446225,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "name",
          "value" : "'Purpojesse92'"
        }, {
          "name" : "mail",
          "value" : "'Kara.Palmer@brown.biz'"
        }, {
          "name" : "pwd",
          "value" : "'*g3D@b'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1718795335202,
      "stop" : 1718795335202,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "delete_output_dir",
    "time" : {
      "start" : 1718795335224,
      "stop" : 1718795335224,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify response code with different name.",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 200 == 400\n +  where 200 = <Response [200]>.status_code",
    "statusTrace" : "self = <tests.tests_api.test_post_register.TestRegister object at 0x7ff7af776510>\nregister = <api.user.USER object at 0x7ff7af552e50>, name = ' section'\nmail = 'robert04@example.com', pwd = 'O#f$#Y', exp = 400\n\n    @pytest.mark.parametrize(\"name, mail, pwd, exp\", name_validation)\n    def test_name_validation(self, register, name, mail, pwd, exp):\n        \"\"\"Verify response code with different name.\"\"\"\n        register.data = register.setup_register_data(name, mail, pwd)\n        response = register.post_register()\n>       assert response.status_code == exp\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntests/tests_api/test_post_register.py:154: AssertionError",
    "steps" : [ {
      "name" : "Set user registration data_models",
      "time" : {
        "start" : 1718795446225,
        "stop" : 1718795446225,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "name",
        "value" : "' section'"
      }, {
        "name" : "mail",
        "value" : "'robert04@example.com'"
      }, {
        "name" : "pwd",
        "value" : "'O#f$#Y'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Send POST register request",
      "time" : {
        "start" : 1718795446225,
        "stop" : 1718795446448,
        "duration" : 223
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "acf25247e65af1b3",
        "name" : "Request Info",
        "source" : "acf25247e65af1b3.txt",
        "type" : "text/plain",
        "size" : 189
      }, {
        "uid" : "7436996fd34f0c5c",
        "name" : "api Response",
        "source" : "7436996fd34f0c5c.json",
        "type" : "application/json",
        "size" : 417
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "register::0",
    "time" : {
      "start" : 1718795446452,
      "stop" : 1718795446859,
      "duration" : 407
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Send DELETE request",
      "time" : {
        "start" : 1718795446452,
        "stop" : 1718795446859,
        "duration" : 407
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Setup Header with user token",
        "time" : {
          "start" : 1718795446452,
          "stop" : 1718795446452,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "token",
          "value" : "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NzJiY2I2OWVkMjgwMDAxYjQ0MWE5YiIsImlhdCI6MTcxODc5NTQ0NiwiZXhwIjoxNzE4Nzk2NjQ2fQ.lQP3v2CKVhmrvavbBCfRdhOJbkpK7hbdkAqrYhW_Q8Y'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ {
        "uid" : "88bdc3639e091ba3",
        "name" : "Request Info",
        "source" : "88bdc3639e091ba3.txt",
        "type" : "text/plain",
        "size" : 311
      } ],
      "parameters" : [ {
        "name" : "access_token",
        "value" : "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NzJiY2I2OWVkMjgwMDAxYjQ0MWE5YiIsImlhdCI6MTcxODc5NTQ0NiwiZXhwIjoxNzE4Nzk2NjQ2fQ.lQP3v2CKVhmrvavbBCfRdhOJbkpK7hbdkAqrYhW_Q8Y'"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "suite",
    "value" : "test_post_register"
  }, {
    "name" : "subSuite",
    "value" : "TestRegister"
  }, {
    "name" : "host",
    "value" : "26ea9f59ac25"
  }, {
    "name" : "thread",
    "value" : "8-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_post_register"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "exp",
    "value" : "400"
  }, {
    "name" : "mail",
    "value" : "'robert04@example.com'"
  }, {
    "name" : "name",
    "value" : "' section'"
  }, {
    "name" : "pwd",
    "value" : "'O#f$#Y'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9d9290f5a76f6c6f.json",
  "parameterValues" : [ "400", "'robert04@example.com'", "' section'", "'O#f$#Y'" ]
}