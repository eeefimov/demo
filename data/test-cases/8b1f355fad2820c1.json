{
  "uid" : "8b1f355fad2820c1",
  "name" : "test_invalid_methods[GET]",
  "fullName" : "tests_api.test_post_logout.TestPostLogout#test_invalid_methods",
  "historyId" : "a2d527d5e8bbad43f8aecb453636561c",
  "time" : {
    "start" : 1718795372834,
    "stop" : 1718795372997,
    "duration" : 163
  },
  "description" : "Verify response code with invalid methods.",
  "descriptionHtml" : "<p>Verify response code with invalid methods.</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 200 == 404\n +  where 200 = <Response [200]>.status_code",
  "statusTrace" : "self = <tests.tests_api.test_post_logout.TestPostLogout object at 0x7ff7b00ea8d0>\nlogout = <api.user.USER object at 0x7ff7af6936d0>, method = 'get', exp = 404\n\n    @pytest.mark.parametrize('method, exp', invalid_methods)\n    def test_invalid_methods(self, logout, method, exp):\n        \"\"\"Verify response code with invalid methods.\"\"\"\n        logout.setup_logout(logout.access_token)\n        response = logout.send_requests(method, logout.endpoints.logout,\n                                        None, logout.data)\n>       assert response.status_code == exp\nE       assert 200 == 404\nE        +  where 200 = <Response [200]>.status_code\n\ntests/tests_api/test_post_logout.py:65: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "logout",
    "time" : {
      "start" : 1718795372624,
      "stop" : 1718795372834,
      "duration" : 210
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Setup logout data",
      "time" : {
        "start" : 1718795372624,
        "stop" : 1718795372624,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Send POST register request",
      "time" : {
        "start" : 1718795372624,
        "stop" : 1718795372834,
        "duration" : 210
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "ff32aec76ef97aa9",
        "name" : "Request Info",
        "source" : "ff32aec76ef97aa9.txt",
        "type" : "text/plain",
        "size" : 216
      }, {
        "uid" : "d59dc8c9b5a9b429",
        "name" : "api Response",
        "source" : "d59dc8c9b5a9b429.json",
        "type" : "application/json",
        "size" : 444
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1718795335202,
      "stop" : 1718795335224,
      "duration" : 22
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1718795335201,
      "stop" : 1718795335202,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1718795335224,
      "stop" : 1718795335224,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1718795335202,
      "stop" : 1718795335202,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "register",
    "time" : {
      "start" : 1718795372623,
      "stop" : 1718795372624,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Setup Register data",
      "time" : {
        "start" : 1718795372623,
        "stop" : 1718795372624,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Set user registration data_models",
        "time" : {
          "start" : 1718795372624,
          "stop" : 1718795372624,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "name",
          "value" : "'No sechristinemcpherson'"
        }, {
          "name" : "mail",
          "value" : "'Yolanda.Smith@sawyer-pollard.com'"
        }, {
          "name" : "pwd",
          "value" : "'YISM8V'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "delete_output_dir",
    "time" : {
      "start" : 1718795335224,
      "stop" : 1718795335224,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify response code with invalid methods.",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 200 == 404\n +  where 200 = <Response [200]>.status_code",
    "statusTrace" : "self = <tests.tests_api.test_post_logout.TestPostLogout object at 0x7ff7b00ea8d0>\nlogout = <api.user.USER object at 0x7ff7af6936d0>, method = 'get', exp = 404\n\n    @pytest.mark.parametrize('method, exp', invalid_methods)\n    def test_invalid_methods(self, logout, method, exp):\n        \"\"\"Verify response code with invalid methods.\"\"\"\n        logout.setup_logout(logout.access_token)\n        response = logout.send_requests(method, logout.endpoints.logout,\n                                        None, logout.data)\n>       assert response.status_code == exp\nE       assert 200 == 404\nE        +  where 200 = <Response [200]>.status_code\n\ntests/tests_api/test_post_logout.py:65: AssertionError",
    "steps" : [ {
      "name" : "Setup logout data",
      "time" : {
        "start" : 1718795372834,
        "stop" : 1718795372834,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "data",
        "value" : "'c4ee5713eb8d320f0a6dc1d0d2b28e791c617ef3427c9bca31f0d0e9cca5d57f1a3a9a86d724809e'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Send get requests",
      "time" : {
        "start" : 1718795372834,
        "stop" : 1718795372996,
        "duration" : 162
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a761d45e47694d32",
        "name" : "Request Info",
        "source" : "a761d45e47694d32.txt",
        "type" : "text/plain",
        "size" : 204
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "logout::0",
    "time" : {
      "start" : 1718795372999,
      "stop" : 1718795373000,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "register::0",
    "time" : {
      "start" : 1718795373001,
      "stop" : 1718795373200,
      "duration" : 199
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Send DELETE request",
      "time" : {
        "start" : 1718795373001,
        "stop" : 1718795373200,
        "duration" : 199
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Setup Header with user token",
        "time" : {
          "start" : 1718795373001,
          "stop" : 1718795373001,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "token",
          "value" : "None"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ {
        "uid" : "c0603a50934fad1d",
        "name" : "Request Info",
        "source" : "c0603a50934fad1d.txt",
        "type" : "text/plain",
        "size" : 137
      } ],
      "parameters" : [ {
        "name" : "access_token",
        "value" : "None"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "suite",
    "value" : "test_post_logout"
  }, {
    "name" : "subSuite",
    "value" : "TestPostLogout"
  }, {
    "name" : "host",
    "value" : "26ea9f59ac25"
  }, {
    "name" : "thread",
    "value" : "8-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_post_logout"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "exp",
    "value" : "404"
  }, {
    "name" : "method",
    "value" : "'get'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 6,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "532f969dc7e62cdd",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 200 == 404\n +  where 200 = <Response [200]>.status_code",
        "time" : {
          "start" : 1718746270277,
          "stop" : 1718746270522,
          "duration" : 245
        }
      }, {
        "uid" : "7658b805c59f8d4e",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 200 == 404\n +  where 200 = <Response [200]>.status_code",
        "time" : {
          "start" : 1718720251708,
          "stop" : 1718720251888,
          "duration" : 180
        }
      }, {
        "uid" : "35f11a6977e41162",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 200 == 404\n +  where 200 = <Response [200]>.status_code",
        "time" : {
          "start" : 1718458600016,
          "stop" : 1718458600244,
          "duration" : 228
        }
      }, {
        "uid" : "54c102dc05162714",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 200 == 404\n +  where 200 = <Response [200]>.status_code",
        "time" : {
          "start" : 1718454870070,
          "stop" : 1718454870233,
          "duration" : 163
        }
      }, {
        "uid" : "37cc3756600a505a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 200 == 404\n +  where 200 = <Response [200]>.status_code",
        "time" : {
          "start" : 1718453533055,
          "stop" : 1718453533225,
          "duration" : 170
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "8b1f355fad2820c1.json",
  "parameterValues" : [ "404", "'get'" ]
}