{
  "uid" : "c21c5961e838ad3b",
  "name" : "test_invalid_methods[GET]",
  "fullName" : "tests_api.test_post_reset_password.TestReset#test_invalid_methods",
  "historyId" : "9a2c0e5f648df66cf090e838afd8cabb",
  "time" : {
    "start" : 1718458698589,
    "stop" : 1718458698808,
    "duration" : 219
  },
  "description" : "Verify response code with invalid type of method.",
  "descriptionHtml" : "<p>Verify response code with invalid type of method.</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 200 == 404\n +  where 200 = <Response [200]>.status_code",
  "statusTrace" : "self = <tests.tests_api.test_post_reset_password.TestReset object at 0x7fb5bf293c10>\nreset = <api.user.USER object at 0x7fb5c0e29e10>, method = 'get', exp = 404\n\n    @pytest.mark.parametrize('method, exp', invalid_methods)\n    def test_invalid_methods(self, reset, method, exp):\n        \"\"\"Verify response code with invalid type of method.\"\"\"\n        response = reset.send_requests(method, reset.endpoint,\n                                       None, reset.data)\n>       assert response.status_code == exp\nE       assert 200 == 404\nE        +  where 200 = <Response [200]>.status_code\n\ntests/tests_api/test_post_reset_password.py:68: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1718458550623,
      "stop" : 1718458550623,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1718458550624,
      "stop" : 1718458550646,
      "duration" : 22
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "reset",
    "time" : {
      "start" : 1718458698307,
      "stop" : 1718458698589,
      "duration" : 282
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Setup reset request",
      "time" : {
        "start" : 1718458698307,
        "stop" : 1718458698589,
        "duration" : 282
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Send POST register request",
        "time" : {
          "start" : 1718458698307,
          "stop" : 1718458698588,
          "duration" : 281
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "cdcc6fad164650be",
          "name" : "Request Info",
          "source" : "cdcc6fad164650be.txt",
          "type" : "text/plain",
          "size" : 209
        }, {
          "uid" : "ccff988f83609559",
          "name" : "api Response",
          "source" : "ccff988f83609559.json",
          "type" : "application/json",
          "size" : 437
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 2,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "reset",
        "value" : "<api.user.USER object at 0x7fb5c0e29e10>"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "register",
    "time" : {
      "start" : 1718458698305,
      "stop" : 1718458698307,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Setup Register data",
      "time" : {
        "start" : 1718458698305,
        "stop" : 1718458698306,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Set user registration data_models",
        "time" : {
          "start" : 1718458698306,
          "stop" : 1718458698306,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "name",
          "value" : "'Signiwatsonpeter'"
        }, {
          "name" : "mail",
          "value" : "'Craig.Johnson@valdez-barnett.com'"
        }, {
          "name" : "pwd",
          "value" : "'RKR9^A'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1718458550623,
      "stop" : 1718458550623,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1718458550623,
      "stop" : 1718458550623,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "delete_output_dir",
    "time" : {
      "start" : 1718458550623,
      "stop" : 1718458550623,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Verify response code with invalid type of method.",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 200 == 404\n +  where 200 = <Response [200]>.status_code",
    "statusTrace" : "self = <tests.tests_api.test_post_reset_password.TestReset object at 0x7fb5bf293c10>\nreset = <api.user.USER object at 0x7fb5c0e29e10>, method = 'get', exp = 404\n\n    @pytest.mark.parametrize('method, exp', invalid_methods)\n    def test_invalid_methods(self, reset, method, exp):\n        \"\"\"Verify response code with invalid type of method.\"\"\"\n        response = reset.send_requests(method, reset.endpoint,\n                                       None, reset.data)\n>       assert response.status_code == exp\nE       assert 200 == 404\nE        +  where 200 = <Response [200]>.status_code\n\ntests/tests_api/test_post_reset_password.py:68: AssertionError",
    "steps" : [ {
      "name" : "Send get requests",
      "time" : {
        "start" : 1718458698589,
        "stop" : 1718458698807,
        "duration" : 218
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "ce4b01f2a502f9c5",
        "name" : "Request Info",
        "source" : "ce4b01f2a502f9c5.txt",
        "type" : "text/plain",
        "size" : 159
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "register::0",
    "time" : {
      "start" : 1718458698810,
      "stop" : 1718458699288,
      "duration" : 478
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Send DELETE request",
      "time" : {
        "start" : 1718458698811,
        "stop" : 1718458699288,
        "duration" : 477
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Setup Header with user token",
        "time" : {
          "start" : 1718458698811,
          "stop" : 1718458698811,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "token",
          "value" : "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NmQ5OTRhOWVkMjgwMDAxYjQzZGM3OCIsImlhdCI6MTcxODQ1ODY5OCwiZXhwIjoxNzE4NDU5ODk4fQ.FOhQCfHlJODATMt2A8JeeU39wEBmzuGVD4qHz3gwrUE'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ {
        "uid" : "1a2fa533f243444d",
        "name" : "Request Info",
        "source" : "1a2fa533f243444d.txt",
        "type" : "text/plain",
        "size" : 311
      } ],
      "parameters" : [ {
        "name" : "access_token",
        "value" : "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NmQ5OTRhOWVkMjgwMDAxYjQzZGM3OCIsImlhdCI6MTcxODQ1ODY5OCwiZXhwIjoxNzE4NDU5ODk4fQ.FOhQCfHlJODATMt2A8JeeU39wEBmzuGVD4qHz3gwrUE'"
      } ],
      "stepsCount" : 1,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "suite",
    "value" : "test_post_reset_password"
  }, {
    "name" : "subSuite",
    "value" : "TestReset"
  }, {
    "name" : "host",
    "value" : "8c6f236140c2"
  }, {
    "name" : "thread",
    "value" : "8-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_post_reset_password"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "exp",
    "value" : "404"
  }, {
    "name" : "method",
    "value" : "'get'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "36f551c1f8eb5469",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 200 == 404\n +  where 200 = <Response [200]>.status_code",
        "time" : {
          "start" : 1718454957384,
          "stop" : 1718454957543,
          "duration" : 159
        }
      }, {
        "uid" : "60d69d63c702456a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 200 == 404\n +  where 200 = <Response [200]>.status_code",
        "time" : {
          "start" : 1718453620415,
          "stop" : 1718453620576,
          "duration" : 161
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c21c5961e838ad3b.json",
  "parameterValues" : [ "404", "'get'" ]
}